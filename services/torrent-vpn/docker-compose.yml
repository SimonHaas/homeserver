version: "3.6"
services:
  vpn:
  # TEST: docker exec -it vpn curl ifconfig.me
    image: ghcr.io/bubuntux/nordlynx
    container_name: vpn
    cap_add:
      - NET_ADMIN
    environment:
      - TZ=${TZ}
      - PRIVATE_KEY=${PRIVATE_KEY}
      - NET_LOCAL=${NET_LOCAL}
      - QUERY=filters\[country_id\]=${COUNTRY_ID}&filters\[servers_groups\]\[identifier\]=${SERVER_TYPE}
    ports:
      - 8191:8191 # flaresolverr
    security_opt:
      - no-new-privileges:true
    networks:
      - traefik
    labels:
      my.zone: zone1
      traefik.enable: true

      traefik.http.routers.qbittorrentvpn.rule: Host(`${SUB_DOMAIN_QBITTORRENT}.${SERVER_DOMAIN}`) # admin/adminadmin
      traefik.http.routers.qbittorrentvpn.entrypoints: websecure
      traefik.http.routers.qbittorrentvpn.service: qbittorrentvpn
      traefik.http.services.qbittorrentvpn.loadbalancer.server.port: 8080

      traefik.http.routers.lidarrvpn.rule: Host(`${SUB_DOMAIN_LIDARR}.${SERVER_DOMAIN}`)
      traefik.http.routers.lidarrvpn.entrypoints: websecure
      traefik.http.routers.lidarrvpn.service: lidarrvpn
      traefik.http.services.lidarrvpn.loadbalancer.server.port: 8686

      traefik.http.routers.sonarrvpn.rule: Host(`${SUB_DOMAIN_SONARR}.${SERVER_DOMAIN}`)
      traefik.http.routers.sonarrvpn.entrypoints: websecure
      traefik.http.routers.sonarrvpn.service: sonarrvpn
      traefik.http.services.sonarrvpn.loadbalancer.server.port: 8989

      traefik.http.routers.radarrvpn.rule: Host(`${SUB_DOMAIN_RADARR}.${SERVER_DOMAIN}`)
      traefik.http.routers.radarrvpn.entrypoints: websecure
      traefik.http.routers.radarrvpn.service: radarrvpn
      traefik.http.services.radarrvpn.loadbalancer.server.port: 7878

      traefik.http.routers.jackettvpn.rule: Host(`${SUB_DOMAIN_JACKETT}.${SERVER_DOMAIN}`)
      traefik.http.routers.jackettvpn.entrypoints: websecure
      traefik.http.routers.jackettvpn.service: jackettvpn
      traefik.http.services.jackettvpn.loadbalancer.server.port: 9117

  qbittorrent:
    image: ghcr.io/linuxserver/qbittorrent
    container_name: qbittorrent-vpn
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
      - WEBUI_PORT=8080 # admin/adminadmin
    volumes:
      - ./data/qbittorrent/config:/config
      - ./data/qbittorrent/downloads:/downloads
    restart: unless-stopped
    network_mode: service:vpn
    depends_on:
      - vpn
    security_opt:
      - no-new-privileges:true

  lidarr:
    image: lscr.io/linuxserver/lidarr
    container_name: lidarr-vpn
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - ./data/lidarr/config:/config
      - ./data/media:/media
    restart: unless-stopped
    network_mode: service:vpn
    depends_on:
      - vpn
    security_opt:
      - no-new-privileges:true

  radarr:
    image: lscr.io/linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - ./data/radarr/config:/config
      - ./data/radarr/media:/media
    restart: unless-stopped
    network_mode: service:vpn
    depends_on:
      - vpn
    security_opt:
      - no-new-privileges:true

  sonarr:
    image: lscr.io/linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - ./data/sonarr/config:/config
      - ./data/sonarr/media:/media
    restart: unless-stopped
    network_mode: service:vpn
    depends_on:
      - vpn
    security_opt:
      - no-new-privileges:true
      
  jackett:
    image: lscr.io/linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
      - AUTO_UPDATE=true
    volumes:
      - ./data/jackett/config:/config
      - ./data/jackett/downloads:/downloads
    restart: unless-stopped
    network_mode: service:vpn
    depends_on:
      - vpn
    security_opt:
      - no-new-privileges:true

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=${TZ}
    restart: unless-stopped
    network_mode: service:vpn
    depends_on:
      - vpn
    security_opt:
      - no-new-privileges:true
# curl -L -X POST 'http://192.168.1.2:8191/v1' -H 'Content-Type: application/json' --data-raw '{"cmd": "request.get","url":"http://www.google.com/","maxTimeout": 60000}'

networks:
  traefik:
    name: zone1