version: "3.6"
services:
    drone:
      image: drone/drone:1
      volumes: 
        - ./data:/data
      environment: 
        - DRONE_AGENTS_ENABLED=true
        - DRONE_GOGS_SERVER=https://${GOGS_DOMAIN}
        - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
        - DRONE_SERVER_HOST=${SUB_DOMAIN}.${SERVER_DOMAIN}
        - DRONE_SERVER_PROTO=https
      container_name: drone
      restart: always
      networks: 
          - traefik
      labels:
          - "traefik.enable=true"
          - "traefik.http.services.drone.loadbalancer.server.port=80"
          - "traefik.http.routers.drone.rule=Host(`${SUB_DOMAIN}.${SERVER_DOMAIN}`)"
          - "traefik.http.routers.drone.entrypoints=websecure"
          - "traefik.http.routers.drone.tls.certresolver=myresolver"

    drone-runner:
      image: drone/drone-runner-docker:1
      container_name: runner
      restart: always
      ports:
        - "3003:3000"
      volumes: 
        - /var/run/docker.sock:/var/run/docker.sock
      environment: 
        - DRONE_RPC_PROTO=https
        - DRONE_RPC_HOST=${SUB_DOMAIN}.${SERVER_DOMAIN}
        - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
        - DRONE_RUNNER_CAPACITY=2
        - DRONE_RUNNER_NAME=drone-runner

networks:
    traefik:
        name: traefik